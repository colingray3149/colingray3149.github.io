---
import ThemeToggle from '../components/ThemeToggle.astro';
import CityToggle from '../components/CityToggle.astro';
import AnimatedBackground from '../components/AnimatedBackground.astro';
const { title = "Colin Gray", description = "Combustion | CFD | ML" } = Astro.props;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <style is:global>
      /* DARK THEME (DEFAULT) & BASE STYLES */
      :root {
        /* Cyberpunk color palette (Dark Mode) */
        --bg: #0a0b0f;
        --bg-secondary: #0f1117;
        --panel: #141620;
        --panel-2: #1a1d29;
        --panel-elevated: #1f2330;
        --text: #e9ecf1;
        --text-secondary: #b8bdc8;
        --muted: #8892a6;
        --pink: #ff37a6;
        --cyan: #5ae0ff;
        --purple: #9333ea;
        --line: #232838;
        --line-bright: #2d3648;
        --glow-pink: rgba(255, 55, 166, 0.3);
        --glow-cyan: rgba(90, 224, 255, 0.3);
        --radius: 12px;
        --radius-lg: 16px;
        --shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
        --shadow-glow: 0 0 20px rgba(90, 224, 255, 0.1);
      }

      /* keep layout width stable; prevents tiny nudges when scrollbars appear */
      /html { scrollbar-gutter: stable; }

      /* LIGHT THEME (MONOCHROME) VARIABLES */
      html.light-theme {
        --bg: #ffffff;
        --bg-secondary: #f7f7f7;
        --panel: #ffffff;
        --panel-2: #f7f7f7;
        --panel-elevated: #f0f0f0;
        --text: #1a1a1a;
        --text-secondary: #4d4d4d;
        --muted: #808080;
        /* Accents are neutralized to black */
        --pink: #1a1a1a;
        --cyan: #1a1a1a;
        --purple: #1a1a1a;
        /* Borders and effects are neutralized */
        --line: #e0e0e0;
        --line-bright: #cccccc;
        --glow-pink: transparent;
        --glow-cyan: transparent;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        --shadow-glow: none;
      }

      /* hover effects (night only) */
      html:not(.light-theme) .social-link:hover,
      html:not(.light-theme) .download-button:hover,
      html:not(.light-theme) .resume-button:hover {
        filter: brightness(1.08);
        transform: translateY(-1px);
      }

      * { box-sizing: border-box; }
      body {
        margin: 0;
        background:
          radial-gradient(ellipse 1200px 600px at 70% -10%, rgba(90, 224, 255, 0.03), transparent),
          radial-gradient(ellipse 800px 400px at 30% 100%, rgba(255, 55, 166, 0.03), transparent),
          radial-gradient(ellipse 600px 300px at 80% 50%, rgba(147, 51, 234, 0.02), transparent),
          var(--bg);
        background-attachment: fixed;
        color: var(--text);
        font: 400 16px/1.65 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, Arial, sans-serif;
        transition: background-color 0.3s ease, color 0.3s ease;
      }
      /* Light theme override for body background */
      html.light-theme body { background: var(--bg); }

      /* NOTE: All city-mode-specific visual overrides have been removed.
         City mode now only controls the AnimatedBackground canvas visibility. */

      /* General Styles */
      h1, h2, h3, h4, h5, h6 { margin: 0; font-weight: 600; line-height: 1.2; }
      a { color: var(--text); text-decoration: none; transition: all 0.2s ease; }
      a:hover { color: var(--cyan); }
      .wrap { max-width: 1200px; margin: 0 auto; padding: 0 24px; }

      .gradient-link {
        font-weight: 600;
        background: linear-gradient(135deg, var(--pink), var(--cyan));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        transition: all 0.3s ease;
      }
      .gradient-link:hover { filter: brightness(1.2); color: unset; }

      /* Header */
      .header {
        padding: 20px 0;
        background: rgba(10, 11, 15, 0.9);
        backdrop-filter: blur(12px);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 2px solid transparent;
      }
      html.light-theme .header {
        background: rgba(255, 255, 255, 0.85);
        border-bottom-color: var(--line);
      }

      .header::after {
        content: '';
        position: absolute; bottom: -2px; left: 0; right: 0; height: 2px;
        background: linear-gradient(90deg, var(--pink), var(--cyan), var(--purple), var(--pink));
        background-size: 200% 100%;
        animation: borderFlow 3s ease-in-out infinite;
      }
      html.light-theme .header::after { display: none; }
      @keyframes borderFlow {
        0%, 100% { background-position: 0% 50%; }
        50%      { background-position: 100% 50%; }
      }

      .header-content { display: flex; justify-content: space-between; align-items: center; gap: 24px; }

      /* Title / Brand */
      .brand {
        font-weight: 700; font-size: 1.25rem;
        background: linear-gradient(135deg, var(--pink), var(--cyan));
        -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;
      }
      html.light-theme .brand {
        background: none;
        -webkit-text-fill-color: var(--text);
        color: var(--text);
      }

              /* --- MOBILE LAYOUT SAFETY NETS --- */
        html, body {
          margin: 0;
          padding: 0;
          width: 100%;
          max-width: 100%;
          overflow-x: hidden; /* only this line from old fix is still useful */
        }
        
        header, .header {
          width: 100%;
          max-width: 100vw;   /* force header to fill screen */
          box-sizing: border-box;
        }
        
        main, .wrap {
          width: 100%;
          max-width: 100vw;
          margin: 0 auto;
        }



      /* Navigation */
      .header-right { display: flex; align-items: center; gap: 8px; }
      .nav { display: flex; gap: 8px; }
      .nav-item {
        padding: 10px 18px; border: 1px solid var(--line); border-radius: 999px;
        background: var(--panel-2); font-size: 0.9rem; font-weight: 500; transition: all 0.3s ease;
      }
      .nav-item:hover { border-color: var(--line-bright); background: var(--panel-elevated); transform: translateY(-1px); }
      .nav-item.active {
        background: linear-gradient(135deg, var(--glow-pink), var(--glow-cyan));
        border-color: transparent; color: var(--text); box-shadow: var(--shadow-glow);
      }
      html.light-theme .nav-item.active {
        background: var(--panel-elevated);
        border-color: var(--line-bright);
        box-shadow: none;
      }

      /* Cyber Box */
      .cyber-box {
        position: relative;
        background: rgba(10, 11, 15, 0.9);
        backdrop-filter: blur(8px);
        border-radius: var(--radius-lg);
        padding: 24px;
        overflow: hidden;
        border: 1px solid transparent;
      }
      html.light-theme .cyber-box {
        background: rgba(255, 255, 255, 0.95);
        border-color: var(--line);
        backdrop-filter: none;
      }
      .cyber-box::before {
        content: '';
        position: absolute; top: 0; left: 0; right: 0; bottom: 0;
        border-radius: var(--radius-lg); padding: 2px;
        background: linear-gradient(45deg, var(--pink), var(--cyan), var(--purple), var(--pink));
        background-size: 300% 300%;
        animation: borderShift 4s ease-in-out infinite;
        -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
        -webkit-mask-composite: exclude;
        mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
        mask-composite: exclude;
      }
      html.light-theme .cyber-box::before { display: none; }
      @keyframes borderShift {
        0%, 100% { background-position: 0% 50%; }
        50%      { background-position: 100% 50%; }
      }

      /* REMOVED FOOTER STYLES - no longer needed */
      /* Back to this: */
      .main-content { 
        padding: 48px 0; 
        min-height: calc(100vh - 200px);
      }

      /* -- Button Unification & Gradient Outlines (V2 - Multi-Background Approach) -- */

      /* DARK MODE ONLY */
      html:not(.light-theme) .nav-item,
      html:not(.light-theme) .social-link {
        /* This is the thickness of your outline */
        border: 1px solid transparent;

        /* This is the key: The first background is the solid inner color, clipped to the inside. 
           The second background is the gradient, clipped to the outside border. */
        background-image:
          linear-gradient(var(--panel-2), var(--panel-2)), 
          linear-gradient(135deg, var(--pink), var(--cyan));
        
        background-origin: border-box;
        background-clip: padding-box, border-box;

        /* A clean, muted text color for the default state */
        color: var(--text-secondary);
        transition: all 0.3s ease;
      }

      /* Hover effect for dark mode */
      html:not(.light-theme) .nav-item:hover,
      html:not(.light-theme) .social-link:hover {
        transform: translateY(-1px);
        color: var(--text); /* Make text brighter on hover */
        filter: brightness(1.1);
      }

      /* --- LIGHT MODE FALLBACK --- */
      /* This ensures the buttons look normal in light mode */
      html.light-theme .nav-item,
      html.light-theme .social-link {
        background-image: none; /* VERY IMPORTANT: Disable the multi-background effect */
        background-color: var(--panel-2);
        border: 1px solid var(--line);
        color: var(--text); /* Use your default text color for light theme */
      }

      html.light-theme .nav-item:hover,
      html.light-theme .social-link:hover {
          border-color: var(--line-bright);
          background-color: var(--panel-elevated);
          transform: translateY(-1px);
          filter: none; /* No brightness filter in light mode */
      }

      /* -- City Mode Protective Backgrounds (Fixed Version) -- */

      /* 1. By default, the wrapper is completely layout-neutral. */
      .city-mode-bg {
        display: contents;
      }

      /* 2. When city mode is ON, the wrapper becomes a visible styling block. */
      html.city-mode-on .city-mode-bg {
        display: inline-block;
        padding: 0 0.5rem; /* Removed vertical padding completely */
        background: rgba(10, 11, 15, 0.9);
        backdrop-filter: blur(8px);
        border-radius: var(--radius);
        transition: background-color 0.4s ease-in-out, backdrop-filter 0.4s ease-in-out;
      }

      /* 3. Apply margins to wrappers and zero out margins on text elements */
      html.city-mode-on .city-mode-bg:has(.tagline) {
        margin-bottom: 32px;
      }

      html.city-mode-on .city-mode-bg:has(.section-title) {
        display: block;
        width: fit-content;
        margin: 0 auto 40px auto;
        border-radius: var(--radius);
      }

      html.city-mode-on .city-mode-bg:has(.projects-footer-text) {
        display: block;
        width: fit-content;
        margin: 40px auto 0 auto;
        border-radius: var(--radius);
      }

      /* 4. Light mode override */
      html.city-mode-on.light-theme .city-mode-bg {
        background: rgba(255, 255, 255, 0.85);
        border: 1px solid var(--line);
      }

      /* 5. IMPORTANT: Zero out margins on text elements ONLY in city mode */
      html.city-mode-on .city-mode-bg .tagline {
        margin-bottom: 0;
      }

      html.city-mode-on .city-mode-bg .section-title {
        margin-bottom: 0;
      }

      html.city-mode-on .city-mode-bg .projects-footer-text {
        margin-top: 0;
        margin-bottom: 0;
      }

      /* 6. Also ensure no extra margins on the h1 in city mode */
      html.city-mode-on .city-mode-bg h1 {
        margin-bottom: 0;
        margin-top: 0;
      }

      /* 7. Remove spacing between the h1 wrapper and tagline wrapper in city mode */
      html.city-mode-on .city-mode-bg:has(h1) {
        margin-bottom: 0; /* No margin between the wrapped elements */
      }
      
      
    </style>
  </head>
  <body>
    <script is:inline>
      // Preserve theme selection
      const theme = localStorage.getItem('theme');
      if (theme === 'light') document.documentElement.classList.add('light-theme');

      // Preserve city toggle class (used ONLY by AnimatedBackground now)
      const cityMode = localStorage.getItem('cityMode');
      if (cityMode === 'on') document.documentElement.classList.add('city-mode-on');
    </script>

    <!-- Background canvas: City toggle only shows/hides this; no other UI changes -->
    <AnimatedBackground />

    <header class="header">
      <div class="wrap">
        <div class="header-content">
          <a class="brand" href="/">Colin Gray</a>
          <div class="header-right">
            <nav class="nav">
              <a class="nav-item" href="/">Home</a>
              <a class="nav-item" href="/projects/">Projects</a>
              <a class="nav-item" href="/cv/">CV</a>
            </nav>
            <CityToggle />
            <ThemeToggle />
          </div>
        </div>
      </div>
    </header>

    <main class="main-content">
      <slot />
    </main>

  </body>
</html>