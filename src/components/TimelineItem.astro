---
const { date, imageSrc, description } = Astro.props;
const altText = typeof description === 'string'
  ? description.replace(/<[^>]*>/g, '') // strip any tags for alt text
  : '';
---
<div class="timeline-item">
  <div class="timeline-dot"></div>
  <div class="timeline-row">
    <a href={imageSrc} class="timeline-image-container" data-description={description}>
      <div class="image-border">
        <img src={imageSrc} alt={altText} loading="lazy" class="timeline-image" />
      </div>
    </a>
    <div class="timeline-content">
      {date && <time class="timeline-date">{date}</time>}
      <div class="content-body">
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  .timeline-item {
    position: relative;
    padding: 20px 0;
  }
  .timeline-row {
    display: flex;
    align-items: center;
    gap: 24px;
  }
  .timeline-dot {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 16px;
    height: 16px;
    background: var(--cyan);
    border: 3px solid var(--panel-elevated);
    border-radius: 50%;
    z-index: 1;
    box-shadow: 0 0 10px var(--glow-cyan);
  }
  .timeline-row {
  display: flex;
  align-items: center;
  gap: 24px;
}
.timeline-content,
.timeline-image-container {
  flex: 1 1 0;   /* equal columns, deterministic */
  min-width: 0;  /* allows content to shrink without overflow */
}


  /* Alternate the order for even items */
  .timeline-item:nth-child(even) .timeline-row {
    flex-direction: row-reverse;
  }

  /* Image styles */
  .timeline-image-container {
    cursor: pointer;
    display: block;
  }
  .image-border {
    position: relative;
    border-radius: var(--radius-lg);
    padding: 2px;
    background: linear-gradient(45deg, var(--pink), var(--cyan));
    background-size: 200% 200%;
    animation: borderShift 4s ease-in-out infinite;
  }
  .timeline-image {
    display: block;
    width: 100%;
    height: auto;
    border-radius: calc(var(--radius-lg) - 2px);
    /* Standardize default size without cropping */
    max-height: var(--timeline-img-max, 360px);
    object-fit: contain;     /* show the whole image */
  }

  /* Text content styles */
  .timeline-content {
    background: rgba(20, 22, 32, 0.98);
    border-radius: var(--radius-lg);
    padding: 24px;
    backdrop-filter:staturate(110%) blur(10px);
  }
  .timeline-date {
    font-weight: 600;
    color: var(--cyan);
    margin-bottom: 12px;
    display: block;
    font-size: 0.9rem;
  }
  .content-body {
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
  }

/* Let unusually tall images widen their column and hang out into the gutter */
@media (min-width: 769px) {
  .timeline-image-container.is-tall {
    /* widen this column ~12% and push outward (away from the center line) */
    width: calc(100% + 12%);
  }
  /* On odd items the image is on the LEFT; stick outward to the left */
  .timeline-item:nth-child(odd) .timeline-image-container.is-tall {
    margin-left: -12%;
  }
  /* On even items the image is on the RIGHT; stick outward to the right */
  .timeline-item:nth-child(even) .timeline-image-container.is-tall {
    margin-right: -12%;
  }
}

/* Never cause horizontal scroll on phones */
@media (max-width: 768px) {
  .timeline-image-container.is-tall {
    width: 100%;
    margin: 0;
  }
}


  /* Responsive for mobile */
@media (max-width: 768px) {
  .timeline-dot {
    left: 20px;
    transform: translate(-50%, -50%);
  }

  /* Always stack content vertically on mobile */
  .timeline-item { padding-left: 48px; }
  .timeline-item .timeline-row,
  .timeline-item:nth-child(even) .timeline-row {
    flex-direction: column;     /* no alternating order weirdness */
    align-items: stretch;
  }

  /* Full width for both columns when stacked */
  .timeline-content,
  .timeline-image-container {
    flex: 0 0 auto;
    width: 100%;
  }

  /* Keep the same visual size ratio for images and panels */
  .timeline-image {
    aspect-ratio: 16 / 10;      /* same as desktop */
  }
}

  


    /* Light theme: lighter panel and darker text for readability */
    html.light-theme .timeline-content {
      background: #f2f2f2;
      color: #1a1a1a;
    }
    html.light-theme .timeline-date { color: #1a1a1a; }
    html.light-theme .content-body { color: #333333; }


</style>